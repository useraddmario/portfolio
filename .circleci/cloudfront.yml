AWSTemplateFormatVersion: '2010-09-09'
Description: My portfolio S3 static website

Parameters:
  DomainName:
    Description: Domain name of website
    Type: String
    Default: useraddmario.com
  PipelineID:
    Description: Unique identifier.
    Type: String
  DomainNameOrg:
    Description: .org
    Type: String
    Default: useraddmario.org
  CertificateArn:
    Description: cert arn 
    Type: String
    Default: arn:aws:acm:us-east-1:089634162715:certificate/760d87a7-008a-4450-82d7-f1ee3f9d3741

Resources:
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Sub 'www.${DomainName}'
          - !Ref DomainNameOrg
          - !Sub 'www.${DomainNameOrg}'
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: 'https-only'
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.1
                - TLSv1.2
            DomainName: !Sub '${DomainName}.s3-website-${AWS::Region}.amazonaws.com'
            Id: !Sub 'S3-${AWS::StackName}-root'
            OriginPath: !Sub "/portfolio-${PipelineID}"
        DefaultRootObject: index.html
        Enabled: true
        DefaultCacheBehavior:
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: true
          MaxTTL: 31536000
          SmoothStreaming: false
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root'
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_200
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  DomainRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainName}.'
      RecordSets:
      - Name: !Ref DomainName
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
      - Name: !Sub 'www.${DomainName}'
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2

  DomainOrgRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainNameOrg}.'
      RecordSets:
      - Name: !Ref DomainNameOrg
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
      - Name: !Sub 'www.${DomainNameOrg}'
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  CloudFrontDistributionID:
    Description: CloudFront Distribution ID for the promotion to production
    Value: !Ref CloudFrontDistribution
